% close all;clear all;clc;

%% Pod fixed Physical=40 and POD for data Q=0.01 R=1e-1
% a=load('SWEd_ 1 1_1.000000e-01_1.000000e-02_ 100_2_5.mat');
a= load('L96100data4p_ 1 1_1.000000e-01_1.000000e-02_ 400.mat');
b=a.results;
c=a.params;
%%
PhysicalProjection=c.PhysicalProjection;
DataProjection=c.DataProjection;
epsQ=c.epsQ;
epsR=c.epsR;
% epsOmega=c.epsOmega;
% iOPPF=c.iOPPF ;
% numModes=c.numModes;
numModes=c.numModesP;
Num=c.Num;
Mult=c.Mult;
%%
RMSEsave=b.RMSEsave;
RMSEsave_proj=b.RMSEsave_proj ;
XCsave=b.XCsave;
XCprojsave=b.XCsave_proj ;
ESSsave=b.ESSsave;
RSpercent=b.ResampPercent;
Time=b.Time;
%%

for j=1:Num
    numModes(j)=j*Mult;
    RMSEave(j) = mean(RMSEsave(:,j));
    RMSEave_proj(j) = mean(RMSEsave_proj(:,j));
    XCave(j) = mean(XCsave(:,j));
    XCave_proj(j) = mean(XCprojsave(:,j));
    ESSave(j)=mean(ESSsave(:,j));
    RSpercent(j)=RSpercent(:,j);
end
TOLC=ptc12(9);
figure(1)
tt = tiledlayout(1,2);
% tt=tiledlayout('flow')
ObsErr = linspace(sqrt(epsR),sqrt(epsR),Num);
nexttile
plot(numModes,RMSEave,'Color', TOLC(1,:),'LineStyle','--','LineWidth', 1.5)
hold on
plot(numModes,RMSEave_proj,'Color', TOLC(7,:),'LineStyle',':','LineWidth', 1.5)
plot(numModes,ObsErr,'k-.','LineWidth', 1.5)
grid on
legend('Model Space','Projected Space','ObsError',...
    'FontWeight','normal',...
    'FontSize',12,...
    'FontName','Times')

xlabel('Data Dimensions',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')
ylabel('Mean RMSE',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')

title('RMSE',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')
set(gca,...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')
xlim([min(numModes) max(numModes)])
hold off
nexttile
plot(numModes,RSpercent,'Color', TOLC(4,:),'LineWidth', 1.5)
xlim([min(numModes) max(numModes)])
grid on
xlabel('Data Dimensions',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')

ylabel('Mean Resampling Percent',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')


title('Resampling Percent',...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')

set(gca,...
    'FontUnits','points',...
    'FontWeight','normal',...
    'FontSize',14,...
    'FontName','Times')
hold off

sgtitle(['Covariances: $Q = $',num2str(epsQ), 'I, $R = $', num2str(epsR), 'I'],...
    'interpreter','latex',...
    'FontWeight','bold',...
    'FontSize',14,...
    'FontName','Times')



tt.TileSpacing = 'compact';
tt.Padding = 'compact';
%%

% nexttile
% plot(numModes,real(ESSave),'Color', TOLC(4,:),'LineStyle','-','LineWidth', 1.5)
% grid on
% 
% xlabel('Data Dimensions',...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% ylabel('Mean Effective Sample Size',...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% 
% title('Effective Sample Size',...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% xlim([min(numModes) max(numModes)])
% set(gca,...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% 
% 
% % nexttile([2 1])
%  nexttile
% plot(numModes,real(XCave),'Color', TOLC(1,:),'LineStyle','-','LineWidth', 1.5)
% hold on
% plot(numModes, real(XCave_proj),'Color', TOLC(7,:),'LineStyle',':','Marker','x','LineWidth', 1.5)
% grid on
% legend('Model Space','Projected Space',...
%     'FontWeight','normal',...
%     'FontSize',12,...
%     'FontName','Times')
% 
% xlabel('Data Dimensions',...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% ylabel('Mean Pattern Correlations ',...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% 
% title('Pattern Correlations',...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% set(gca,...
%     'FontUnits','points',...
%     'FontWeight','normal',...
%     'FontSize',14,...
%     'FontName','Times')
% xlim([min(numModes) max(numModes)])
% hold off

%% Here you can save the file as eps format which is good with Latex
% print -depsc SWE_physical_proj_DMD%graph name
% print -depsc SWE_physical_proj_DMD_inth1000%graph name
% print -depsc SWE_physical_proj_DMDPOD_inth1000%graph name
% print -depsc SWE_data_proj_POD_inth1%graph name
%print -depsc SWE_data_proj_dmd_inth1%graph name
% print -depsc SWEd_DMD_POD_inth1%graph name
%  print -depsc SWEp_DMD_POD_inth1000%graph name
% print -depsc SWEp_DMD_POD_inth1%graph name